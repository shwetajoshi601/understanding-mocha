{
  "stats": {
    "suites": 1,
    "tests": 2,
    "passes": 2,
    "pending": 0,
    "failures": 0,
    "start": "2017-11-07T12:11:17.697Z",
    "end": "2017-11-07T12:11:19.307Z",
    "duration": 1610,
    "testsRegistered": 2,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false,
    "passPercentClass": "success",
    "pendingPercentClass": "danger"
  },
  "suites": {
    "title": "",
    "suites": [
      {
        "title": "Server Test Cases",
        "suites": [],
        "tests": [
          {
            "title": "#Success Case",
            "fullTitle": "Server Test Cases #Success Case",
            "timedOut": false,
            "duration": 1580,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var req = {\n    url: testData.URL,\n    method: 'POST',\n    body: {\n        'text': \"Hieeee\",\n        'channel': 'D7P4W5L9F',\n        'token': testData.token\n    },\n    json: true\n}\nrequest(req, function (err, res) {\n    console.log(\"\\n\\n\\n************ err- res **************\");\n    console.log(err);\n    console.log(res.body);\n    assert.isNull(err, 'Expected err to be null, but its not null');\n    assert.isNotNull(res, 'Expected non-null response, but got null');\n    assert.equal(res.statusCode, 200, 'Expected status 200 but got ' + res.statusCode);\n    assert.property(res.body.message, 'username', 'Property username is missing from response');\n    done();\n});",
            "err": {},
            "isRoot": false,
            "uuid": "b262b70a-5939-4d71-9024-82f46ae907d3",
            "parentUUID": "46db4d08-10d9-4203-a771-4912f88ab4cc",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "#Error Case - mandatory field missing",
            "fullTitle": "Server Test Cases #Error Case - mandatory field missing",
            "timedOut": false,
            "duration": 20,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var req = {\n    url: testData.URL,\n    method: 'POST',\n    body: {\n        'text': \"Hieeee\",\n        'token': testData.token\n    },\n    json: true\n}\nrequest(req, function (err, res) {\n    console.log(\"\\n\\n\\n************ err- res **************\");\n    console.log(err);\n    console.log(res.body);\n    assert.isNotNull(res, 'Expected non-null response, but got null');\n    assert.equal(res.statusCode, 400, 'Expected status 200 but got ' + res.statusCode);\n    assert.equal(res.body.error, 'Mandatory field missing', 'Expected mandatory field missing error but got '+res.body);\n    done();\n});",
            "err": {},
            "isRoot": false,
            "uuid": "7024e660-b84d-4984-bd04-879ce945a8f9",
            "parentUUID": "46db4d08-10d9-4203-a771-4912f88ab4cc",
            "isHook": false,
            "skipped": false
          }
        ],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "\\test\\server-test.js",
        "uuid": "46db4d08-10d9-4203-a771-4912f88ab4cc",
        "beforeHooks": [
          {
            "title": "\"before all\" hook",
            "fullTitle": "Server Test Cases \"before all\" hook",
            "timedOut": false,
            "duration": 0,
            "pass": false,
            "fail": false,
            "pending": false,
            "code": "if (!(testData.URL && testData.token)) {\n    this.skip();\n}",
            "err": {},
            "isRoot": false,
            "uuid": "7f94bc5a-c3b6-4155-b6e3-be4bee8962f8",
            "parentUUID": "46db4d08-10d9-4203-a771-4912f88ab4cc",
            "isHook": true,
            "skipped": false
          }
        ],
        "afterHooks": [],
        "fullFile": "D:\\TRAINING\\Mocha-Sinon-Chai\\Session-Demo\\test\\server-test.js",
        "passes": [
          {
            "title": "#Success Case",
            "fullTitle": "Server Test Cases #Success Case",
            "timedOut": false,
            "duration": 1580,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var req = {\n    url: testData.URL,\n    method: 'POST',\n    body: {\n        'text': \"Hieeee\",\n        'channel': 'D7P4W5L9F',\n        'token': testData.token\n    },\n    json: true\n}\nrequest(req, function (err, res) {\n    console.log(\"\\n\\n\\n************ err- res **************\");\n    console.log(err);\n    console.log(res.body);\n    assert.isNull(err, 'Expected err to be null, but its not null');\n    assert.isNotNull(res, 'Expected non-null response, but got null');\n    assert.equal(res.statusCode, 200, 'Expected status 200 but got ' + res.statusCode);\n    assert.property(res.body.message, 'username', 'Property username is missing from response');\n    done();\n});",
            "err": {},
            "isRoot": false,
            "uuid": "b262b70a-5939-4d71-9024-82f46ae907d3",
            "parentUUID": "46db4d08-10d9-4203-a771-4912f88ab4cc",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "#Error Case - mandatory field missing",
            "fullTitle": "Server Test Cases #Error Case - mandatory field missing",
            "timedOut": false,
            "duration": 20,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var req = {\n    url: testData.URL,\n    method: 'POST',\n    body: {\n        'text': \"Hieeee\",\n        'token': testData.token\n    },\n    json: true\n}\nrequest(req, function (err, res) {\n    console.log(\"\\n\\n\\n************ err- res **************\");\n    console.log(err);\n    console.log(res.body);\n    assert.isNotNull(res, 'Expected non-null response, but got null');\n    assert.equal(res.statusCode, 400, 'Expected status 200 but got ' + res.statusCode);\n    assert.equal(res.body.error, 'Mandatory field missing', 'Expected mandatory field missing error but got '+res.body);\n    done();\n});",
            "err": {},
            "isRoot": false,
            "uuid": "7024e660-b84d-4984-bd04-879ce945a8f9",
            "parentUUID": "46db4d08-10d9-4203-a771-4912f88ab4cc",
            "isHook": false,
            "skipped": false
          }
        ],
        "failures": [],
        "skipped": [],
        "hasBeforeHooks": true,
        "hasAfterHooks": false,
        "hasTests": true,
        "hasSuites": false,
        "totalTests": 2,
        "totalPasses": 2,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": true,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 1600,
        "rootEmpty": false
      }
    ],
    "tests": [],
    "pending": [],
    "root": true,
    "_timeout": 2000,
    "uuid": "8e8b1d13-f77d-4213-80b0-6287b5c4e4ee",
    "beforeHooks": [],
    "afterHooks": [],
    "fullFile": "",
    "file": "",
    "passes": [],
    "failures": [],
    "skipped": [],
    "hasBeforeHooks": false,
    "hasAfterHooks": false,
    "hasTests": false,
    "hasSuites": true,
    "totalTests": 0,
    "totalPasses": 0,
    "totalFailures": 0,
    "totalPending": 0,
    "totalSkipped": 0,
    "hasPasses": false,
    "hasFailures": false,
    "hasPending": false,
    "hasSkipped": false,
    "duration": 0,
    "rootEmpty": true
  },
  "allTests": [
    {
      "title": "#Success Case",
      "fullTitle": "Server Test Cases #Success Case",
      "timedOut": false,
      "duration": 1580,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var req = {\n    url: testData.URL,\n    method: 'POST',\n    body: {\n        'text': \"Hieeee\",\n        'channel': 'D7P4W5L9F',\n        'token': testData.token\n    },\n    json: true\n}\nrequest(req, function (err, res) {\n    console.log(\"\\n\\n\\n************ err- res **************\");\n    console.log(err);\n    console.log(res.body);\n    assert.isNull(err, 'Expected err to be null, but its not null');\n    assert.isNotNull(res, 'Expected non-null response, but got null');\n    assert.equal(res.statusCode, 200, 'Expected status 200 but got ' + res.statusCode);\n    assert.property(res.body.message, 'username', 'Property username is missing from response');\n    done();\n});",
      "err": {},
      "isRoot": false,
      "uuid": "b262b70a-5939-4d71-9024-82f46ae907d3",
      "parentUUID": "46db4d08-10d9-4203-a771-4912f88ab4cc",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "#Error Case - mandatory field missing",
      "fullTitle": "Server Test Cases #Error Case - mandatory field missing",
      "timedOut": false,
      "duration": 20,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var req = {\n    url: testData.URL,\n    method: 'POST',\n    body: {\n        'text': \"Hieeee\",\n        'token': testData.token\n    },\n    json: true\n}\nrequest(req, function (err, res) {\n    console.log(\"\\n\\n\\n************ err- res **************\");\n    console.log(err);\n    console.log(res.body);\n    assert.isNotNull(res, 'Expected non-null response, but got null');\n    assert.equal(res.statusCode, 400, 'Expected status 200 but got ' + res.statusCode);\n    assert.equal(res.body.error, 'Mandatory field missing', 'Expected mandatory field missing error but got '+res.body);\n    done();\n});",
      "err": {},
      "isRoot": false,
      "uuid": "7024e660-b84d-4984-bd04-879ce945a8f9",
      "parentUUID": "46db4d08-10d9-4203-a771-4912f88ab4cc",
      "isHook": false,
      "skipped": false
    }
  ],
  "allPending": [],
  "allPasses": [
    {
      "title": "#Success Case",
      "fullTitle": "Server Test Cases #Success Case",
      "timedOut": false,
      "duration": 1580,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var req = {\n    url: testData.URL,\n    method: 'POST',\n    body: {\n        'text': \"Hieeee\",\n        'channel': 'D7P4W5L9F',\n        'token': testData.token\n    },\n    json: true\n}\nrequest(req, function (err, res) {\n    console.log(\"\\n\\n\\n************ err- res **************\");\n    console.log(err);\n    console.log(res.body);\n    assert.isNull(err, 'Expected err to be null, but its not null');\n    assert.isNotNull(res, 'Expected non-null response, but got null');\n    assert.equal(res.statusCode, 200, 'Expected status 200 but got ' + res.statusCode);\n    assert.property(res.body.message, 'username', 'Property username is missing from response');\n    done();\n});",
      "err": {},
      "isRoot": false,
      "uuid": "b262b70a-5939-4d71-9024-82f46ae907d3",
      "parentUUID": "46db4d08-10d9-4203-a771-4912f88ab4cc",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "#Error Case - mandatory field missing",
      "fullTitle": "Server Test Cases #Error Case - mandatory field missing",
      "timedOut": false,
      "duration": 20,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var req = {\n    url: testData.URL,\n    method: 'POST',\n    body: {\n        'text': \"Hieeee\",\n        'token': testData.token\n    },\n    json: true\n}\nrequest(req, function (err, res) {\n    console.log(\"\\n\\n\\n************ err- res **************\");\n    console.log(err);\n    console.log(res.body);\n    assert.isNotNull(res, 'Expected non-null response, but got null');\n    assert.equal(res.statusCode, 400, 'Expected status 200 but got ' + res.statusCode);\n    assert.equal(res.body.error, 'Mandatory field missing', 'Expected mandatory field missing error but got '+res.body);\n    done();\n});",
      "err": {},
      "isRoot": false,
      "uuid": "7024e660-b84d-4984-bd04-879ce945a8f9",
      "parentUUID": "46db4d08-10d9-4203-a771-4912f88ab4cc",
      "isHook": false,
      "skipped": false
    }
  ],
  "allFailures": [],
  "copyrightYear": 2017
}