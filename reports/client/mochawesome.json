{
  "stats": {
    "suites": 1,
    "tests": 4,
    "passes": 4,
    "pending": 0,
    "failures": 0,
    "start": "2017-11-07T10:15:16.683Z",
    "end": "2017-11-07T10:15:20.995Z",
    "duration": 4312,
    "testsRegistered": 4,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false,
    "passPercentClass": "success",
    "pendingPercentClass": "danger"
  },
  "suites": {
    "title": "",
    "suites": [
      {
        "title": "Client Test Cases",
        "suites": [],
        "tests": [
          {
            "title": "Case to list users successfully - using expect",
            "fullTitle": "Client Test Cases Case to list users successfully - using expect",
            "timedOut": false,
            "duration": 1300,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "console.log(\"--------TC-1----------\");\n    client.listUsers(testData.URL, testData.token,function(err,res){\n    console.log(\"\\n\\n----------err-------------\");\n    console.log(err);\n    expect(err).to.be.null;\n    expect(res).to.be.not.null;\n    expect(res.statusCode).to.equal(200);\n    expect(Array.isArray(res.body)).to.equal(true);\n    done();\n});",
            "err": {},
            "isRoot": false,
            "uuid": "aedcd8f8-bae8-4801-adbd-947c181dd2c5",
            "parentUUID": "eacb13f9-a8c9-4752-a3ac-0e6b34f68ee1",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Case to list users successfully - using should",
            "fullTitle": "Client Test Cases Case to list users successfully - using should",
            "timedOut": false,
            "duration": 981,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "console.log(\"--------TC-2----------\");\n    client.listUsers(testData.URL, testData.token,function(err,res){\n    //err.should.be.null; -- ERROR - cannot read property should of null\n    should.equal(err,null);\n    should.not.exist(err);\n    res.should.be.not.null;\n    res.statusCode.should.equal(200);\n    Array.isArray(res.body).should.equal(true);\n    done();\n});",
            "err": {},
            "isRoot": false,
            "uuid": "72dd2464-2aa3-4eb3-b3cb-cc2c523a0327",
            "parentUUID": "eacb13f9-a8c9-4752-a3ac-0e6b34f68ee1",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Case to list users successfully - using assert",
            "fullTitle": "Client Test Cases Case to list users successfully - using assert",
            "timedOut": false,
            "duration": 1035,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "console.log(\"--------TC-3----------\");\nclient.listUsers(testData.URL, testData.token,function(err,res){\n    assert.isNull(err,'Expected err to be null, but its not null');\n    assert.isNotNull(res,'Expected non-null response, but got null');\n    assert.isArray(res.body,'Expected res.body to be Array but got'+typeof res.body);\n    done();\n});",
            "err": {},
            "isRoot": false,
            "uuid": "035141be-af50-4055-bbff-00c3160f0f78",
            "parentUUID": "eacb13f9-a8c9-4752-a3ac-0e6b34f68ee1",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Case to get error for invalid URL",
            "fullTitle": "Client Test Cases Case to get error for invalid URL",
            "timedOut": false,
            "duration": 976,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "console.log(\"--------TC-4----------\");\nclient.listUsers(\"invalid\", testData.token,function(err,res){  \n//expect(err.statusCode).to.equal(400);\nassert.isNotNull(err,'Expected error, but got null');\nassert.equal(err.statusCode,500,'Expected statusCode 500 but got '+err.statusCode);\nassert.equal(err.error,'unknown_method','Expected error unknown_method but got '+err.error);\ndone();\n});",
            "err": {},
            "isRoot": false,
            "uuid": "49c1e9f3-33b0-4023-be2d-22a31fdb2415",
            "parentUUID": "eacb13f9-a8c9-4752-a3ac-0e6b34f68ee1",
            "isHook": false,
            "skipped": false
          }
        ],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "\\test\\client-test.js",
        "uuid": "eacb13f9-a8c9-4752-a3ac-0e6b34f68ee1",
        "beforeHooks": [
          {
            "title": "\"before all\" hook",
            "fullTitle": "Client Test Cases \"before all\" hook",
            "timedOut": false,
            "duration": 0,
            "pass": false,
            "fail": false,
            "pending": false,
            "code": "console.log(\"---------in before---------\");\nif(!testData.URL)\n{\n    this.skip();\n}",
            "err": {},
            "isRoot": false,
            "uuid": "6515a1db-f291-401a-9512-1dc23d3a239a",
            "parentUUID": "eacb13f9-a8c9-4752-a3ac-0e6b34f68ee1",
            "isHook": true,
            "skipped": false
          }
        ],
        "afterHooks": [],
        "fullFile": "D:\\TRAINING\\Mocha-Sinon-Chai\\Session-Demo\\test\\client-test.js",
        "passes": [
          {
            "title": "Case to list users successfully - using expect",
            "fullTitle": "Client Test Cases Case to list users successfully - using expect",
            "timedOut": false,
            "duration": 1300,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "console.log(\"--------TC-1----------\");\n    client.listUsers(testData.URL, testData.token,function(err,res){\n    console.log(\"\\n\\n----------err-------------\");\n    console.log(err);\n    expect(err).to.be.null;\n    expect(res).to.be.not.null;\n    expect(res.statusCode).to.equal(200);\n    expect(Array.isArray(res.body)).to.equal(true);\n    done();\n});",
            "err": {},
            "isRoot": false,
            "uuid": "aedcd8f8-bae8-4801-adbd-947c181dd2c5",
            "parentUUID": "eacb13f9-a8c9-4752-a3ac-0e6b34f68ee1",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Case to list users successfully - using should",
            "fullTitle": "Client Test Cases Case to list users successfully - using should",
            "timedOut": false,
            "duration": 981,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "console.log(\"--------TC-2----------\");\n    client.listUsers(testData.URL, testData.token,function(err,res){\n    //err.should.be.null; -- ERROR - cannot read property should of null\n    should.equal(err,null);\n    should.not.exist(err);\n    res.should.be.not.null;\n    res.statusCode.should.equal(200);\n    Array.isArray(res.body).should.equal(true);\n    done();\n});",
            "err": {},
            "isRoot": false,
            "uuid": "72dd2464-2aa3-4eb3-b3cb-cc2c523a0327",
            "parentUUID": "eacb13f9-a8c9-4752-a3ac-0e6b34f68ee1",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Case to list users successfully - using assert",
            "fullTitle": "Client Test Cases Case to list users successfully - using assert",
            "timedOut": false,
            "duration": 1035,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "console.log(\"--------TC-3----------\");\nclient.listUsers(testData.URL, testData.token,function(err,res){\n    assert.isNull(err,'Expected err to be null, but its not null');\n    assert.isNotNull(res,'Expected non-null response, but got null');\n    assert.isArray(res.body,'Expected res.body to be Array but got'+typeof res.body);\n    done();\n});",
            "err": {},
            "isRoot": false,
            "uuid": "035141be-af50-4055-bbff-00c3160f0f78",
            "parentUUID": "eacb13f9-a8c9-4752-a3ac-0e6b34f68ee1",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Case to get error for invalid URL",
            "fullTitle": "Client Test Cases Case to get error for invalid URL",
            "timedOut": false,
            "duration": 976,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "console.log(\"--------TC-4----------\");\nclient.listUsers(\"invalid\", testData.token,function(err,res){  \n//expect(err.statusCode).to.equal(400);\nassert.isNotNull(err,'Expected error, but got null');\nassert.equal(err.statusCode,500,'Expected statusCode 500 but got '+err.statusCode);\nassert.equal(err.error,'unknown_method','Expected error unknown_method but got '+err.error);\ndone();\n});",
            "err": {},
            "isRoot": false,
            "uuid": "49c1e9f3-33b0-4023-be2d-22a31fdb2415",
            "parentUUID": "eacb13f9-a8c9-4752-a3ac-0e6b34f68ee1",
            "isHook": false,
            "skipped": false
          }
        ],
        "failures": [],
        "skipped": [],
        "hasBeforeHooks": true,
        "hasAfterHooks": false,
        "hasTests": true,
        "hasSuites": false,
        "totalTests": 4,
        "totalPasses": 4,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": true,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 4292,
        "rootEmpty": false
      }
    ],
    "tests": [],
    "pending": [],
    "root": true,
    "_timeout": 2000,
    "uuid": "3242ab9e-d9d6-474c-b0f0-68da8bd347f7",
    "beforeHooks": [],
    "afterHooks": [],
    "fullFile": "",
    "file": "",
    "passes": [],
    "failures": [],
    "skipped": [],
    "hasBeforeHooks": false,
    "hasAfterHooks": false,
    "hasTests": false,
    "hasSuites": true,
    "totalTests": 0,
    "totalPasses": 0,
    "totalFailures": 0,
    "totalPending": 0,
    "totalSkipped": 0,
    "hasPasses": false,
    "hasFailures": false,
    "hasPending": false,
    "hasSkipped": false,
    "duration": 0,
    "rootEmpty": true
  },
  "allTests": [
    {
      "title": "Case to list users successfully - using expect",
      "fullTitle": "Client Test Cases Case to list users successfully - using expect",
      "timedOut": false,
      "duration": 1300,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "console.log(\"--------TC-1----------\");\n    client.listUsers(testData.URL, testData.token,function(err,res){\n    console.log(\"\\n\\n----------err-------------\");\n    console.log(err);\n    expect(err).to.be.null;\n    expect(res).to.be.not.null;\n    expect(res.statusCode).to.equal(200);\n    expect(Array.isArray(res.body)).to.equal(true);\n    done();\n});",
      "err": {},
      "isRoot": false,
      "uuid": "aedcd8f8-bae8-4801-adbd-947c181dd2c5",
      "parentUUID": "eacb13f9-a8c9-4752-a3ac-0e6b34f68ee1",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "Case to list users successfully - using should",
      "fullTitle": "Client Test Cases Case to list users successfully - using should",
      "timedOut": false,
      "duration": 981,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "console.log(\"--------TC-2----------\");\n    client.listUsers(testData.URL, testData.token,function(err,res){\n    //err.should.be.null; -- ERROR - cannot read property should of null\n    should.equal(err,null);\n    should.not.exist(err);\n    res.should.be.not.null;\n    res.statusCode.should.equal(200);\n    Array.isArray(res.body).should.equal(true);\n    done();\n});",
      "err": {},
      "isRoot": false,
      "uuid": "72dd2464-2aa3-4eb3-b3cb-cc2c523a0327",
      "parentUUID": "eacb13f9-a8c9-4752-a3ac-0e6b34f68ee1",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "Case to list users successfully - using assert",
      "fullTitle": "Client Test Cases Case to list users successfully - using assert",
      "timedOut": false,
      "duration": 1035,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "console.log(\"--------TC-3----------\");\nclient.listUsers(testData.URL, testData.token,function(err,res){\n    assert.isNull(err,'Expected err to be null, but its not null');\n    assert.isNotNull(res,'Expected non-null response, but got null');\n    assert.isArray(res.body,'Expected res.body to be Array but got'+typeof res.body);\n    done();\n});",
      "err": {},
      "isRoot": false,
      "uuid": "035141be-af50-4055-bbff-00c3160f0f78",
      "parentUUID": "eacb13f9-a8c9-4752-a3ac-0e6b34f68ee1",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "Case to get error for invalid URL",
      "fullTitle": "Client Test Cases Case to get error for invalid URL",
      "timedOut": false,
      "duration": 976,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "console.log(\"--------TC-4----------\");\nclient.listUsers(\"invalid\", testData.token,function(err,res){  \n//expect(err.statusCode).to.equal(400);\nassert.isNotNull(err,'Expected error, but got null');\nassert.equal(err.statusCode,500,'Expected statusCode 500 but got '+err.statusCode);\nassert.equal(err.error,'unknown_method','Expected error unknown_method but got '+err.error);\ndone();\n});",
      "err": {},
      "isRoot": false,
      "uuid": "49c1e9f3-33b0-4023-be2d-22a31fdb2415",
      "parentUUID": "eacb13f9-a8c9-4752-a3ac-0e6b34f68ee1",
      "isHook": false,
      "skipped": false
    }
  ],
  "allPending": [],
  "allPasses": [
    {
      "title": "Case to list users successfully - using expect",
      "fullTitle": "Client Test Cases Case to list users successfully - using expect",
      "timedOut": false,
      "duration": 1300,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "console.log(\"--------TC-1----------\");\n    client.listUsers(testData.URL, testData.token,function(err,res){\n    console.log(\"\\n\\n----------err-------------\");\n    console.log(err);\n    expect(err).to.be.null;\n    expect(res).to.be.not.null;\n    expect(res.statusCode).to.equal(200);\n    expect(Array.isArray(res.body)).to.equal(true);\n    done();\n});",
      "err": {},
      "isRoot": false,
      "uuid": "aedcd8f8-bae8-4801-adbd-947c181dd2c5",
      "parentUUID": "eacb13f9-a8c9-4752-a3ac-0e6b34f68ee1",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "Case to list users successfully - using should",
      "fullTitle": "Client Test Cases Case to list users successfully - using should",
      "timedOut": false,
      "duration": 981,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "console.log(\"--------TC-2----------\");\n    client.listUsers(testData.URL, testData.token,function(err,res){\n    //err.should.be.null; -- ERROR - cannot read property should of null\n    should.equal(err,null);\n    should.not.exist(err);\n    res.should.be.not.null;\n    res.statusCode.should.equal(200);\n    Array.isArray(res.body).should.equal(true);\n    done();\n});",
      "err": {},
      "isRoot": false,
      "uuid": "72dd2464-2aa3-4eb3-b3cb-cc2c523a0327",
      "parentUUID": "eacb13f9-a8c9-4752-a3ac-0e6b34f68ee1",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "Case to list users successfully - using assert",
      "fullTitle": "Client Test Cases Case to list users successfully - using assert",
      "timedOut": false,
      "duration": 1035,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "console.log(\"--------TC-3----------\");\nclient.listUsers(testData.URL, testData.token,function(err,res){\n    assert.isNull(err,'Expected err to be null, but its not null');\n    assert.isNotNull(res,'Expected non-null response, but got null');\n    assert.isArray(res.body,'Expected res.body to be Array but got'+typeof res.body);\n    done();\n});",
      "err": {},
      "isRoot": false,
      "uuid": "035141be-af50-4055-bbff-00c3160f0f78",
      "parentUUID": "eacb13f9-a8c9-4752-a3ac-0e6b34f68ee1",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "Case to get error for invalid URL",
      "fullTitle": "Client Test Cases Case to get error for invalid URL",
      "timedOut": false,
      "duration": 976,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "console.log(\"--------TC-4----------\");\nclient.listUsers(\"invalid\", testData.token,function(err,res){  \n//expect(err.statusCode).to.equal(400);\nassert.isNotNull(err,'Expected error, but got null');\nassert.equal(err.statusCode,500,'Expected statusCode 500 but got '+err.statusCode);\nassert.equal(err.error,'unknown_method','Expected error unknown_method but got '+err.error);\ndone();\n});",
      "err": {},
      "isRoot": false,
      "uuid": "49c1e9f3-33b0-4023-be2d-22a31fdb2415",
      "parentUUID": "eacb13f9-a8c9-4752-a3ac-0e6b34f68ee1",
      "isHook": false,
      "skipped": false
    }
  ],
  "allFailures": [],
  "copyrightYear": 2017
}